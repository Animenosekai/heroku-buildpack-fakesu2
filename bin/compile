#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
set -e

mktmpdir() {
  dir=$(mktemp -t fakesu-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2

WGET_BUILD="$(mktmpdir wget)"
DEBOOTSTRAP_BUILD="$(mktmpdir debootstrap)"
FAKECHROOT_BUILD="$(mktmpdir fakechroot)"

mkdir -p $BUILD_DIR/.tools/fakechroot
mkdir -p $CACHE_DIR/.tools/{wget,debootstrap}

export PATH=/sbin:/usr/sbin:$PATH:$CACHE_DIR/.tools/wget/bin:$CACHE_DIR/.tools/debootstrap/usr/sbin:$BUILD_DIR/.tools/fakechroot/sbin:$BUILD_DIR/.tools/fakechroot/bin
export DEBOOTSTRAP_DIR=$CACHE_DIR/.tools/debootstrap/usr/share/debootstrap

echo "-----> Fetching and installing wget"
cd $WGET_BUILD
curl -O http://ftp.gnu.org/gnu/wget/wget-1.19.tar.xz 2>&1
tar xvfJ wget-1.19.tar.xz >/dev/null 2>&1
cd wget-1.19
./configure --prefix=$CACHE_DIR/.tools/wget --without-ssl 2>&1
make 2>&1
make install 2>&1
echo "wget installed" | indent

echo "-----> Fetching and installing debootstrap"
cd $DEBOOTSTRAP_BUILD
wget http://archive.ubuntu.com/ubuntu/pool/main/d/debootstrap/debootstrap_1.0.91ubuntu1.tar.gz 2>&1
tar zxvf debootstrap_1.0.55.tar.gz >/dev/null
cd debootstrap-1.0.55
DESTDIR=$CACHE_DIR/.tools/debootstrap fakeroot make
DESTDIR=$CACHE_DIR/.tools/debootstrap fakeroot make install
echo "debootstrap installed" | indent

echo "-----> Fetching, installing and vendoring fakechroot into /app/.tools/fakechroot/"
cd $FAKECHROOT_BUILD
git clone git://github.com/fabiokung/fakechroot.git
cd fakechroot
./autogen.sh 2>&1
./configure --prefix=$BUILD_DIR/.tools/fakechroot
make
make install
echo "fakechroot vendored" | indent

cd $BUILDPACK_DIR
echo "-----> Bootstraping a new base ubuntu lucid into /app/.root/"
mkdir -p $BUILD_DIR/.root
fakechroot -s fakeroot debootstrap --no-check-gpg --variant=fakechroot xenial $BUILD_DIR/.root
fakechroot fakeroot chroot $BUILD_DIR/.root apt-get install -y --force-yes gpgv 2>&1
echo "/app/.root bootstraped" | indent

sed -i -e "s/#force_color_prompt=yes/force_color_prompt=yes/" $BUILD_DIR/.root/root/.bashrc
echo "export PATH=/sbin:/usr/sbin:\$PATH" >> $BUILD_DIR/.root/root/.bashrc
echo "cd $HOME" >> $BUILD_DIR/.root/root/.bashrc

echo "-----> Updating packages"
fakechroot fakeroot chroot $BUILD_DIR/.root bash -c "cat > /etc/apt/sources.list <<EOF
deb http://archive.ubuntu.com/ubuntu xenial main universe
deb http://archive.ubuntu.com/ubuntu xenial-security main
deb http://archive.ubuntu.com/ubuntu xenial-updates main
EOF"
fakechroot fakeroot chroot $BUILD_DIR/.root apt-get update
echo "packages updated" | indent

cd $BUILD_DIR/.root
ln -s ../ app

mkdir -p $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/fakesu $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/aws $BUILD_DIR/bin

exit 0
